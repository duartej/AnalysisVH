********************
**                **
** Changelog      **
**                **
********************

Nov. 9th 2011 --  Tag release v0.1 : First version working
  * Synchronised with original-PROOF code (IFCA-UO/WH  MAIN r1.11)
  * Found a bug in PROOF's code: line 566 'imuon' should be 'i' (r1.12)
Nov. 10th 2011--  Tag release v0.2 : Freeze version with MiniTrees (before change to Latinos)
  * Improved sendcluster utility (to send analysis to cluster and gather the outputs)
  * Added haddPlus utility, hadd improved version to deal with InputParamters and TCounterUI
    objects
  * Fixed some methods in order to make the plot utilities work with the outputs
Nov. 11th 2011--  Tag release v0.3 : First version with Latinos
  * TreeManager include electron methods
Nov. 13th 2011--  Tag release v1.0 : Analysis independence of the final state
  * AnalysisVH (will be) base class for a concrete final state analysis, independently of 
  the final state signature
  * TreeManager extracts directly the data members of a TChain without build the Tree structure
  of a file. TO BE DEPRECATED: 
                              - wrappers methods to get the datamembers of a TChain
			      - construction of the TreeManagerMiniTrees code, and as consequence
			      there will be no longer need to launch the datamanagercreator (it will
			      be renamed to extractdatafiles or something like that)
Nov. 16th 2011--  Tag release v2.0 : Deprecated selector dependence of each file
  * Not needed to created a selector specific for each data file, getting directly the values via
  the name of the branch. It slows the process a factor ~2.3. Nevertheless, it introduces clarity and
  do not break the workflow creating a selector for each file (or group of files), also portability
  between the different types of ntuples. It takes ~20m to process ~1.1M when the v01.00 took ~7m to
  process ~1.1M of events.
Nov. 19th 2011-- Tag release v02.01: Included the mixing signatures
  * Still missing deep checks, but shows reasonable results
Nov. 25th 2011-- Tag release v03.00: Included the AnalysisBase class
  * Each concrete analysis inherits from AnalysisBase which take account the interaction with the data
  * It is needed to virtualize some methods in AnalysisBase in order to let choose the concrete analysis
  what wants to store
Dec. 19th 2011-- Tag release v04.00: WZ analysis stable
  * Deep cleaning of WZ analysis and incorporation of new cuts (dR internal bremsstralung). Results show
  good agreement data-MC (see WZ2011_MCFall11 dir)
  * CutLevels is promoted to a package (out of WH_Analysis), the class keeps the cuts order of every 
  analysis.
  * Deprecated TResultsTable package in favor of printtable.py script
  * Analysis workflow up to now:
     1. Call 'datamanagercreator -r <2011|2011A|2011B> -f <mmm|mme|eem|eee>' to create the 
     datafiles containing the path to the root files (Name_datanames.dn)
     2. Create a directory for each final state
     3. Launch 'sendall SIGNAL', where SIGNAL=WZ or WH
     4. Collect all outputs with 'collectall SIGNAL'
     5. Merge all final states into the one (lepton final state) using 'merge3leptonsfs -d dirch1,dirch2,...'
     6. Do the plots and merge all final states using 'plotall SIGNAL' where SIGNAL can be WHnnn or WZ.
        nnn is the mass hypothesis
   You can see what are the actual process calling in each script
Feb. 08th 2012-- Tag release v04.01: Improvements in the analysis and Fakes incorporation
   * Analysis improvements: 
      - Anti internal breamsstraulhung cut
      - Z and W candidate cut levels (in WZ analysis)
   * Management improvements:
      - New scripts for send, collect all the samples at once
      - New histograms added
   * Fakes incorporation:  it is possible to extract a first estimation of fake background using 
   the new -F option in runanalysis. The estimation is done assuming:
      1. p = 1 (prompt ratio)
      2. TTnT ---> nT ==> weight per event: f/(1-f) where f=f(pt,eta) of the noTight lepton of the
         event
      - The manager of this new functionality is FOManager class
      - Also, added new options to the sendcluster, plothisto, printable, ... scripts to deal with
        this new mode 


     
    


TODO:
  A00. Incorporate to the ATleast3Leptons level, the channel information when are dealing
     with mixing channels. Now until we arrive to the Z candidate level the 2mu1e and the
     2e1mu channel behave the same (because is in that level where it is introduced the 
     flavour requirement). This makes impossible to compare data-MC up to Z candidate level 
  A01. Find a way to deal with the control region analysis: now I have to recompile and change the code if
     I want to send a control region.
  A02. Change the _selectedWhatever collection just by a _selected collection in the CutManager class.
     I think it will turn out more legible.
  A. Include in the 'cuts' TTree the 'RunNumber' also
  B. Include the Z+Jets madgraph (including also the needed modifications in the code
     to avoid doble counting, see Ana's email)
  5. Check with the *.sh.e* the good behaviour of the job
  9. Put in the configuration the Working Point to be used in the Electrons
  12.Generalize the sendcluster script such a way it was able to send any kind of cluster job, not only the 
     runanalysis job (see skimfiles.py script to identify what functions could be used as general funtions
     of an abstract class (clustermanager, for instance) and what ones must be implemented in each concrete
     class. So the germinal idea seems to be: clustermanager is an abstract class to deal with the cluster
     but each user who wants to send her/his code must to implement some concrete class which implement
     some user specific methods, the createbash method for instance.
  14.Include a 'resubmit' argument to sendcluster
  15.In order to control how must be called the CutManager::SelectWhateverLeptons methods, these methods
     should be protected to avoid the direct call by any user, the GetNWhateverLepton methods are the 
     interface methods to use not the SelectWhateverLeptons ... 


