SHELL = /bin/sh

PACKAGE   := $(shell basename `pwd`)

CXX       = g++
CXXFLAGS  = -Wall

LDFLAGS   = -shared -fPIC

SOURCES    := $(wildcard src/*.cc)
HEADERS    := $(wildcard interface/*.h)
# VH_Analysis include dir
INCDIR     := -I$(shell OLDPWD=pwd && cd .. && pwd & cd ${OLDPWD})
INCDIR     += -I$(shell pwd)/interface
#-- Needed for the dict
INCDIR     += -I$(shell pwd)

### Dependencies
DEPPKG     := CMSAnalysisSelector TCounterUI InputParameters
BASEDIR    := $(shell cd .. && pwd && cd ..)
DEPSDIR    := $(foreach DEPPKG,$(DEPPKG),$(BASEDIR)/$(DEPPKG))
DEPSLIBS   := $(foreach DEPPKG,$(DEPPKG),-l$(DEPPKG))
DEPSLIBDIR := $(foreach DEPSDIR,$(DEPSDIR),-L$(DEPSDIR)/lib)
DEPSSEARCHLIBDIRS := $(foreach DEPSDIR,$(DEPSDIR),$(DEPSDIR)/lib)
DEPSINC    := $(foreach DEPSDIR,$(DEPSDIR),-I$(DEPSDIR) -I$(DEPSDIR)/interface)

# To search the libraries dependencies
vpath %.so $(subst  ,:,$(DEPSSEARCHLIBDIRS))

ROOTINCDIR ?= -I$(shell root-config --incdir)
ROOTLIBDIR ?= -L$(shell root-config --libdir)
ROOTLIBS   ?= $(shell root-config --libs)
ROOTCINT   ?= rootcint


###### OBjects
OBJDIR     := build
OBJECTS    := $(patsubst src/%.cc,$(OBJDIR)/%.o,$(wildcard src/*.cc))


### Macro to extract the path to the dependency libraries
getpkgbasedir  = $(foreach var,$(1), $(filter %/$(var),$(DEPSDIR))) 


all: lib/lib$(PACKAGE).so


$(OBJECTS): $(SOURCES) $(HEADERS)
	@echo "=== $(PACKAGE): ++++ Creating objects"
	@$(shell mkdir -p build)
	@$(CXX) $(LDFLAGS) -c $(CXXFLAGS) $(DEPSINC) $(INCDIR) $(ROOTINCDIR) $(SOURCES) -o $(OBJECTS) 

$(DEPSLIBS): 
	@# Checking if it is necessary to compile the dependency libraries
	@echo "=== $(PACKAGE): compiling dependencies..."
	@for libdir in $(call getpkgbasedir,$(subst -l,,$@)); do \
		$(MAKE) -C $$libdir; \
	done

lib/lib$(PACKAGE).so: $(DEPSLIBS) $(DICTOBJECT) $(OBJECTS)
	@echo "=== $(PACKAGE): +++ Linking"
	@$(shell mkdir -p lib)
	@$(CXX) $(LDFLAGS) $(CXXFLAGS) $(DEPSLIBDIR) $(ROOTLIBDIR) $(ROOTLIBS) $^ -o $@  
	@echo "... Done $(PACKAGE)"

.PHONY: clean cleanall

cleanall: clean
	@for libdir in $(DEPSDIR); do \
		$(MAKE) -C $$libdir clean; \
	done

clean:
	@if [ -f lib/lib$(PACKAGE).so ]; then \
		echo "++++++ $(PACKAGE): Cleaning ...." ; \
		rm lib/lib$(PACKAGE).so $(OBJECTS) $(DICTOBJECT); \
		rmdir lib; \
		rmdir $(OBJDIR); \
		rm $(DICTHEADER) ; \
		rm $(DICTSRC) ; \
	else  \
		echo "make: Nothing to be done for \`clean'."; \
	fi;


	
